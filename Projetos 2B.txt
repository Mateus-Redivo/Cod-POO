### 1. Sistema de Gerenciamento de Alunos

Grupo: Enrico, Matheus A, Pedro E

 Descrição: Criar classes para representar alunos, turmas, professores e matérias.
 Funcionalidades:

   Matricular alunos em turmas
   Atribuir notas para cada aluno em diferentes disciplinas
   Calcular a média final e aprovar/reprovar o aluno

Escopo básico:
Classes principais:

Pessoa (superclasse)

Atributos: id, nome, dataNascimento

Subclasses: Aluno, Professor

Aluno

Atributos: matricula, listaNotas (matéria e nota), turma

Métodos: calcularMedia(), verificarAprovacao()

Professor

Atributos: disciplina, listaTurmas

Métodos: lançarNota(aluno, nota)

Turma

Atributos: id, nome, listaAlunos, professor



### 2. Biblioteca Escolar

Grupo: Rafael Garrido, Joao Victor, Mateus Borges

 Descrição: Sistema para controle de empréstimos de livros da biblioteca.
 Funcionalidades:

   Cadastrar livros e alunos
   Registrar empréstimos e devoluções
   Consultar livros disponíveis e livros emprestados

Escopo básico:
Classes principais:

Livro

Atributos: id, título, autor, ano, status (disponível/emprestado)

Métodos: emprestar(), devolver()

Aluno

Atributos: id, nome, matricula

Emprestimo

Atributos: id, livro, aluno, dataEmprestimo, dataDevolucao

Métodos: registrarEmprestimo(), registrarDevolucao()


### 3. Sistema de Gestão de Frequência

Grupo: Murilo P, Rafael R, Caua L

 Descrição: Controle de presença dos alunos em cada aula.
 Funcionalidades:

   Registrar presenças e faltas
   Gerar relatórios de frequência por aluno e turma

Escopo básico:
Classes principais:

Aluno

Atributos: id, nome, turma

Turma

Atributos: id, nome, listaAlunos

Frequencia

Atributos: data, aluno, presença (booleano)

Métodos: marcarPresenca(), gerarRelatorio()


### 4. Simulador de Notas e Boletim

Grupo: Igor, Kaua, Lucca

 Descrição: Criar um sistema onde o aluno pode consultar suas notas e calcular média.
 Funcionalidades:

   Inserir notas para diferentes matérias
   Calcular média por matéria e geral
   Exibir aprovação ou recuperação

Escopo básico:
Classes principais:

Aluno

Atributos: id, nome, listaNotas (Matéria, nota)

Materia

Atributos: id, nome

Boletim

Atributos: aluno, listaNotas

Métodos: calcularMedia(), verificarStatus()


### 5. Sistema de Eventos da Escola

Grupo: Lucas M, Guilherme S, Felipe K

 Descrição: Organizar eventos como feiras, apresentações, reuniões.
 Funcionalidades:

   Criar eventos com data, local e descrição
   Inscrever alunos e professores nos eventos
   Visualizar eventos agendados

Escopo básico:
Classes principais:

Evento

Atributos: id, nome, data, local, descrição, listaParticipantes

Pessoa

Atributos: id, nome, tipo (aluno, professor, funcionário)

Participacao

Atributos: pessoa, evento

Métodos: inscrever(), cancelarInscricao()


### 6. Sistema de Cantina Escolar

Grupo: Kamilly,Enzo R, Leonardo R

 Descrição: Gerenciar vendas e estoque da cantina da escola.
 Funcionalidades:

   Cadastro de produtos com preço e quantidade em estoque
   Registrar vendas feitas para alunos e professores
   Atualizar estoque automaticamente após vendas

Escopo básico:
Classes principais:

Produto

Atributos: id, nome, preço, quantidadeEstoque

Métodos: atualizarEstoque(qtd), exibirDetalhes()

Venda

Atributos: id, listaProdutos (produtos vendidos com quantidade), data, valorTotal

Métodos: calcularTotal(), registrarVenda()

Cliente (Aluno ou Funcionário)

Atributos: id, nome, tipo (aluno, professor, etc.)



### 7. Sistema de Avisos e Comunicados

Grupo: Otavio C, Leonardo C, Murilo A

 Descrição: Plataforma para envio e visualização de comunicados para alunos, professores e funcionários.
 Funcionalidades:

   Criar comunicados com título, descrição e data
   Filtrar comunicados por público-alvo (alunos, professores)
   Marcar comunicados como lidos

Escopo básico:
Classes principais:

Comunicado

Atributos: id, título, mensagem, data, públicoAlvo (lista de destinatários)

Métodos: enviar(), marcarComoLido(usuario)

Pessoa (superclasse)

Atributos: id, nome, email

Subclasses: Aluno, Professor, Funcionário

LeituraComunicado

Atributos: comunicadoId, pessoaId, statusLido


### 8. Sistema de Avaliação de Professores

Grupo: Mateus R, Murilo F, Raul

 Descrição: Alunos podem avaliar professores em diferentes critérios.
 Funcionalidades:

   Cadastrar professores e alunos
   Inserir avaliações (nota e comentário) para professores
   Calcular média das avaliações por professor

Escopo básico:
Classes principais:

Professor

Atributos: id, nome, disciplina

Métodos: calcularMediaAvaliacoes()

Aluno

Atributos: id, nome, turma

Avaliacao

Atributos: id, professor, aluno, nota, comentario

Métodos: validarNota()


### 9. Sistema de Reserva de Salas e Laboratórios

Grupo: Rebeca, Marina, Pedro H

 Descrição: Controle de reservas para uso de salas de aula e laboratórios.
 Funcionalidades:

   Registrar reservas por data e horário
   Verificar disponibilidade das salas
   Cancelar ou modificar reservas

Escopo básico:
Classes principais:

Sala

Atributos: id, nome, tipo (sala comum, laboratório), capacidade

Reserva

Atributos: id, sala, data, horarioInicio, horarioFim, reservante (Pessoa)

Métodos: verificarDisponibilidade(), cancelarReserva()

Pessoa

Atributos: id, nome, papel (aluno, professor)


### 10. Sistema de Ranking de Atividades Extracurriculares

Grupo: Joao Rafael, Joao Ricardo, Otavio Matias

 Descrição: Monitorar e ranquear alunos por participação em atividades como esportes, artes, clubes.
 Funcionalidades:

   Cadastrar atividades e alunos participantes
   Registrar pontos ou horas dedicadas
   Gerar ranking por atividade e geral

Escopo básico:
Classes principais:

Atividade

Atributos: id, nome, descrição, tipo (esporte, arte, clube)

Aluno

Atributos: id, nome, turma

Participacao

Atributos: aluno, atividade, pontos, horasDedicadas

Métodos: calcularRanking()

Ranking

Atributos: listaParticipacoesOrdenada

